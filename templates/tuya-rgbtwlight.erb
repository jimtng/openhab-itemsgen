Thing mqtt:topic:mosquitto:<%= thingid %> (mqtt:broker:mosquitto) {
    Channels:
        Type switch : power	 [ stateTopic="tuya/<%= thingid %>/state", commandTopic="tuya/<%= thingid %>/command" ]
        Type dimmer : dimmer     [ stateTopic="tuya/<%= thingid %>/white_brightness_state", commandTopic="tuya/<%= thingid %>/white_brightness_command" ]
<% if key? 'ct' %>
        Type dimmer : ct         [ stateTopic="tuya/<%= thingid %>/color_temp_state", commandTopic="tuya/<%= thingid %>/color_temp_command", min=154, max=400, step=1 ]
<% end %>
<% if key? 'color' %>
        Type string : color      [ stateTopic="stat/<%= thingid %>/RESULT", transformationPattern="REGEX:(.*Color.*)âˆ©JSONPATH:$.Color", commandTopic="cmnd/<%= thingid %>/Color" ]
        Type colorHSB : colorhsb [ stateTopic="tuya/<%= thingid %>/hsb_state", commandTopic="tuya/<%= thingid %>/hsb_command" ]
<% end %>
        Type contact: availability [ stateTopic="tuya/<%= thingid %>/status", on="online", off="offline" ]
}

<%

# Return the assistant tags or empty string based on "assistant_tags" value from yaml
def assistant_tags(str)
  omit_assistant_tags ? '' : str
end

%>
// Template: <%= template_name %>
<% group_name = "#{name}_Bulb" %>

Group <%= group_name %> "<%= label %>" <light> <%= make_groups groups %> <%= make_tags 'Lightbulb', tags %>  <%= make_metadata assistant_tags(%w[ga="Light" alexa="Endpoint.Light"]), metadata %>

Switch <%= name %>_Power  "<%= label %> Power" <light> <%= make_groups group_name, power['groups'] %> <%= make_tags %w[Control Power], power['tags'] %> { channel="mqtt:topic:mosquitto:<%= thingid %>:power", autoupdate="false"<%= add_metadata assistant_tags(%w{ga="lightPower" alexa="Powercontroller.powerState"}), power['metadata'] %> }
Dimmer <%= name %>_Dimmer "<%= label %>" <%= make_groups group_name, dimmer['groups'] %> <%= make_tags %w[Control Light], dimmer['tags'] %> { channel="mqtt:topic:mosquitto:<%= thingid %>:dimmer"<%= add_metadata assistant_tags(%w{ga="lightBrightness" alexa="BrightnessController.brightness"}), dimmer['metadata'] %> }
<% if key? 'ct' %>
Dimmer <%= name %>_CT     "<%= label %> CT" <%= make_groups group_name, ct['groups'] %> <%= make_tags %w[Control ColorTemperature], ct['tags'] %> { channel="mqtt:topic:mosquitto:<%= thingid %>:ct"<%= add_metadata assistant_tags(['ga="lightColorTemperature"', 'alexa="ColorTemperatureController.colorTemperatureInKelvin" [increment="10"]']), ct['metadata'] %> }
<% end %>
<% if key? 'color' %>
Color <%= name %>_Color  "<%= label %> Color" <colorwheel> <%= make_groups group_name, color['groups'] %> <%= make_tags %w[Control Color], color['tags'] %>  { channel="mqtt:topic:mosquitto:<%= thingid %>:colorhsb"<%= add_metadata assistant_tags(%w{ga="lightColor" alexa="ColorController.color"}), color['metadata'] %> }
<% end %>
Contact <%= name %>_Availability "<%= label %> Availability [MAP(availability.map):%s]" <%= make_groups group_name, 'gAvailability' %> { channel="mqtt:topic:mosquitto:<%= thingid %>:availability" }

